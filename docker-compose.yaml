version: '3.7'

x-base-service: &default-env
  env_file:
      - ./.env

services:
  django:
    <<: *default-env
    build:
      context: ./car_salon_activities
      dockerfile: Dockerfile
    entrypoint:
      - ./django-entrypoint.sh
    hostname: django
    ports:
      - 8000:${DJANGO_SERVER_PORT}
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:${DJANGO_SERVER_PORT}/api/v1/auth/users/"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back:
        ipv4_address: 192.168.10.2
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy
    restart: always

  postgres:
    <<: *default-env
    image: postgres:14.4-alpine
    hostname: postgres
    ports:
      - 5432:${POSTGRES_PORT}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back:
        ipv4_address: 192.168.10.3
    volumes:
      - ./car_salon_activities/data/postgres:/var/lib/postgresql/data
    restart: always

  rabbitmq:
    <<: *default-env
    image: rabbitmq:3.10.7-management-alpine
    hostname: rabbitmq
    ports:
      - 15672:${RABBITMQ_PORT}
      - 5672:${AMQP_RABBITMQ_PORT}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back:
        ipv4_address: 192.168.10.4
    volumes:
      - ./car_salon_activities/data/rabbitmq:/var/lib/rabbitmq
    restart: always

  redis:
    <<: *default-env
    image: redis:7.2.1-alpine3.18
    command: redis-server --requirepass ${REDIS_PASSWORD}
    hostname: redis
    ports:
      - 6379:${REDIS_PORT}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back:
        ipv4_address: 192.168.10.5
    volumes:
      - ./car_salon_activities/data/redis:/root/redis
    restart: always

  celery:
    <<: *default-env
    build:
      context: ./car_salon_activities
      dockerfile: Dockerfile
    entrypoint:
      - ./celery-entrypoint.sh
    hostname: celery
    healthcheck:
      test: ["CMD-SHELL", "celery -A car_salon_activities inspect ping --destination worker1@celery"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back:
        ipv4_address: 192.168.10.6
    links:
      - postgres
      - rabbitmq
      - redis
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  beat:
    <<: *default-env
    build:
      context: ./car_salon_activities
      dockerfile: Dockerfile
    entrypoint:
      - ./beat-entrypoint.sh
    hostname: beat
    healthcheck:
      test: ["CMD-SHELL", "pgrep celery"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      back:
        ipv4_address: 192.168.10.7
    links:
      - postgres
      - rabbitmq
      - redis
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always

  flower:
    <<: *default-env
    build:
      context: ./car_salon_activities
      dockerfile: Dockerfile
    entrypoint:
      - ./flower-entrypoint.sh
    hostname: flower
    healthcheck:
      test: ["CMD-SHELL", "curl localhost:${FLOWER_PORT}/"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports:
      - 5555:${FLOWER_PORT}
    networks:
      back:
        ipv4_address: 192.168.10.8
    links:
      - celery
      - beat
    depends_on:
      celery:
        condition: service_healthy
      beat:
        condition: service_healthy
    restart: always

networks:
  back:
    driver: bridge
    internal: false
    ipam:
     config:
       - subnet: 192.168.10.0/24
